---
title: Recover from errors (validation)
description: Check the answers users give to make sure they’re valid - and if there’s an error, tell them what's wrong and how to fix it
section: Patterns
theme: Help users to…
aliases: 
backlog_issue_id: 
layout: layout-pane.njk
---

Check the answers users give to make sure they’re valid. If there's a validation error, tell the user what's gone wrong and how to fix it. Turn off HTML5 validation.

## When to use this pattern

Make validation error messages a last resort. Minimise the chances of the user making an error by:

[making sure your questions are well designed](https://www.gov.uk/service-manual/design/designing-good-questions)
accepting information in different formats as long as it’s not ambiguous (for example, you should accept postcodes with or without spaces - or names with non-alphabetical characters like accents)

But even if you design your questions well, users will sometimes provide information you can’t use.

When this happens, use validation to let the user know that something has gone wrong.

## When not to use this pattern

Do not show validation error messages if the user isn’t eligible to use the service. Instead, show them a page which tells them they’re not eligible and gives them useful information about what to do next.

There are separate patterns for:

+ [‘there is a problem with the service’ pages](../problem-with-the-service-pages)
+ [‘page not found’ pages](../page-not-found-pages)
+ [‘service unavailable’ pages](../service-unavailable-pages)

## How it works

Validation should refuse to accept:

+ information that can’t be correct
+ information that’s too ambiguous for you to use
+ missing information, if the information is required

For example, if you’re asking for someone’s date of birth you shouldn’t accept ‘13’ in the month field.

### Telling the user about validation errors

If the user's answers fail validation:

+ show them the page again, with the form fields as the user filled them in
+ add ‘Error: ’ to the beginning of the page `<title>` so screen readers read it out as soon as possible
+ show an [error summary](/components/error-summary) at the top of the page
+ show [error messages](/components/error-messages) next to fields with errors

Read guidance on [writing good error messages](/components/error-message#be-clear-and-concise).

Show the error messages when they click the ‘continue’ or ‘submit’ button at the bottom of the page. Unless your user research tells you there’s a good reason to do so, avoid showing the error message:

+ when users select or tab to a field
+ as they are typing
+ when they move away from a field

## Client side and server side validation

There are 2 ways to carry out validation:

+ server side validation
+ client side validation (in the browser, using either JavaScript or HTML)

You’ll always need to carry out server side validation, because there’s no guarantee that client side validation will work in all circumstances. For example users can bypass client side validation, or [JavaScript can fail to load](https://www.gov.uk/service-manual/technology/using-progressive-enhancement).

If you use client side validation, make sure your client side and server side validation rules do not conflict.

### When to tell the user about validation errors

Show the error messages when they click the ‘continue’ or ‘submit’ button at the bottom of the page.

Only add client side validation if your user research demonstrates that there’s a clear need to show the error message before the user clicks ‘continue’ or ‘submit’.

For example if the user is choosing a password, it might make sense to tell them whether the password is strong enough after they’ve moved focus away from the password field. If you do this, make sure the content on the page is still accessible to people using [assistive technologies](https://www.gov.uk/service-manual/technology/testing-with-assistive-technologies).

## Do not use HTML5 validation

HTML5 validation is a type of client side validation built into browsers. Do not use it because:

+ the visual style, placement and content of HTML5 error messages can’t be made consistent with the GOV.UK Design System
+ we know that the GOV.UK Design System error message and error summary components are accessible

To turn off HTML5 validation:

+ add ‘[novalidate](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#attr-novalidate)’ to your form tags
+ do not add ‘required’ to your input fields
